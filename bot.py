from random import choice
from glob import glob
import telebot
from telebot import types
import requests as r
from bs4 import BeautifulSoup as bs
from PIL import Image

KEY = '5126890620:AAEw-CztNB-4rldEnhO9MVrUfXafHZvSWVQ'

bot = telebot.TeleBot(KEY)

buttons = ['–û–±–Ω–æ–≤–∏—Ç—å', '–ù–µ–±–æ –Ω–∞–¥ –≥–æ–ª–æ–≤–æ–π üî≠', '–ü–æ–≥–æ–¥–∞ üå¶', '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç üò≠', '–ù–æ–≤–æ—Å—Ç–∏ üíÄ', '–•–†–Ø–ö üêñ', '–ö–ê–ë–ê–ù ü¶ç']
@bot.message_handler(commands=['start'])
def start(msg):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('–û–±–Ω–æ–≤–∏—Ç—å')
    markup.row(types.KeyboardButton('–ù–µ–±–æ –Ω–∞–¥ –≥–æ–ª–æ–≤–æ–π üî≠', request_location=True), '–ü–æ–≥–æ–¥–∞ üå¶', '–ó–µ–º–ª—è –æ—Ç NASA üåé')
    markup.row('–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç üò≠', '–ù–æ–≤–æ—Å—Ç–∏ üíÄ')
    markup.row('–•–†–Ø–ö üêñ', '–ö–ê–ë–ê–ù ü¶ç')

    bot.send_message(msg.chat.id, '–ß—Ç–æ —Ö–æ—á–µ—à—å?', reply_markup=markup)


@bot.message_handler(content_types=['text','location','InputMediaPhoto'])
def actions(msg):
    if msg.text == '–û–±–Ω–æ–≤–∏—Ç—å':
        start(msg)

    # weather

    if msg.text == '–ü–æ–≥–æ–¥–∞ üå¶':
        bot.reply_to(msg, '–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞')
        @bot.message_handler(content_types=['text'])
        def weather(msg):
                coordURL = f"http://api.openweathermap.org/geo/1.0/direct?q={str(msg.text)}&limit=5&appid=2dd9ea7ad178166dee8752723832cd70"
                coordRESPONSE = r.get(coordURL)
                coordDATA = coordRESPONSE.json()
                if coordDATA != []:
                    lat = f"{coordDATA[0]['lat']}"
                    lon = f"{coordDATA[0]['lon']}"
                    weatherURL = f"http://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&units=metric&lang=ru&appid=2dd9ea7ad178166dee8752723832cd70"
                    weatherRESPONSE = r.get(weatherURL)
                    weatherDATA = weatherRESPONSE.json()

                    placeURL = f"https://www.geonames.org/search.html?q={str(msg.text)}"
                    placeidRESPONSE = r.get(placeURL)
                    soup = bs(placeidRESPONSE.text, 'html.parser')
                    ids = [link['href'] for link in soup.find_all('a', href=True)]
                    ID = ids[6][1:8]

                    astroURL = f"https://www.meteoblue.com/en/weather/outdoorsports/seeing/" \
                               f"{coordDATA[0]['name'].replace(' ', '-')}_" \
                               f"{coordDATA[0]['country']}_{ID}"
                    astro_message = '–ê—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å:' + '\n' + astroURL

                    weather_message = f"–°–µ–π—á–∞—Å –Ω–∞ —É–ª–∏—Ü–µ:" + '\n' * 2 \
                                      + f"{weatherDATA['weather'][0]['description']}" + '\n' \
                                      + f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weatherDATA['main']['temp']}" + '\n' \
                                      + f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {weatherDATA['main']['feels_like']}" + '\n' \
                                      + f"–ú–∏–Ω: {weatherDATA['main']['temp_min']}" + '\n' \
                                      + f"–ú–∞–∫—Å: {weatherDATA['main']['temp_max']}" + '\n' \
                                      + f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {weatherDATA['main']['humidity']}" '\n'

                    bot.send_location(msg.chat.id, float(lat), float(lon))
                    bot.reply_to(msg, astro_message)
                    bot.reply_to(msg, weather_message)
                else:
                    bot.reply_to(msg, '–ù–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æüò≠üò≠üò≠')

        bot.register_next_step_handler(msg, weather)

    #sky

    if msg.location is not None:
        lat = msg.location.latitude
        lon = msg.location.longitude
        url = f'https://www.heavens-above.com/SkyChart.aspx?lat={str(lat)}&lng={str(lon)}&loc=Unspecified&alt=0&tz=UCT'
        skyRESPONSE = r.get(url)
        soup = bs(skyRESPONSE.content, 'html.parser')
        image_soup = soup.select('img[id=ctl00_cph1_imgSkyChart]')
        image_url = image_soup[0]['src']
        img_data = r.get(f'https://www.heavens-above.com/{image_url}').content
        weatherURL = f"http://api.openweathermap.org/data/2.5/weather?lat={str(lat)}&lon={str(lon)}&units=metric&lang=ru&appid=2dd9ea7ad178166dee8752723832cd70"
        weatherRESPONSE = r.get(weatherURL)
        weatherDATA = weatherRESPONSE.json()
        place = weatherDATA['name']
        bot.send_photo(msg.chat.id, img_data, reply_to_message_id=msg.message_id,caption=f'–ù–µ–±–æ –Ω–∞–¥ {place}')

    #Earth pics

    if msg.text == '–ó–µ–º–ª—è –æ—Ç NASA üåé':
        url = 'https://api.nasa.gov/EPIC/api/natural/images?api_key=iCd9fDWK0WiK09yYma0dW5w1dNbRYjVaDx8Ho2bk'
        response = r.get(url)
        data = response.json()
        imgs = []
        dates = []
        count = 0
        message = bot.send_message(msg.chat.id, f'–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {count}/{len(data)}')
        for i in data:
            dates.append(i['date'])
            count+=1
            imgs.append(types.InputMediaPhoto(Image.open(r.get(f"https://epic.gsfc.nasa.gov./epic-archive/jpg/{i['image']}.jpg", stream=True).raw)))
            bot.edit_message_text(chat_id=msg.chat.id, message_id=message.message_id, text=f'–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {count}/{len(data)}')
        bot.delete_message(msg.chat.id, message.message_id)
        for i in range(len(dates)):
            dates[i] = f"{i+1} —Å–Ω–∏–º–æ–∫: "+str(dates[i])
        bot.send_media_group(msg.chat.id, imgs[0:10])
        if len(imgs) > 10:
            bot.send_media_group(msg.chat.id, imgs[10:len(imgs)])
        bot.send_message(msg.chat.id, '–°–∞–º—ã–µ —Å–≤–µ–∂–∏–µ —Å–Ω–∏–º–∫–∏ co —Å–ø—É—Ç–Ω–∏–∫–∞ NASA "NOAA DSCOVR"' + '\n\n'
                         + '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è (—á–∞—Å–æ–≤–æ–π –ø–æ—è—Å UTC+0): ' + f'\n\n' + '\n'.join(map(str, dates)))

    # currencies

    if msg.text == '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç üò≠':
        GBP = 'https://v6.exchangerate-api.com/v6/b15cca4a04289cbfe1d610a2/latest/GBP'
        EUR = 'https://v6.exchangerate-api.com/v6/b15cca4a04289cbfe1d610a2/latest/EUR'
        USD = 'https://v6.exchangerate-api.com/v6/b15cca4a04289cbfe1d610a2/latest/USD'
        gbp = r.get(GBP)
        eur = r.get(EUR)
        usd = r.get(USD)
        dataGBP = gbp.json()
        dataEUR = eur.json()
        dataUSD = usd.json()
        rep = f"1 USD = {dataUSD['conversion_rates']['RUB']} RUB" + '\n' \
              f"1 EUR = {dataEUR['conversion_rates']['RUB']} RUB" + '\n' \
              f"1 GBP = {dataGBP['conversion_rates']['RUB']} RUB"
        bot.reply_to(msg, rep)

    # news

    if msg.text == '–ù–æ–≤–æ—Å—Ç–∏ üíÄ':
        dot = '\u25CF'
        message = '–ì–ª–∞–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:' + '\n' * 2
        url = 'https://newsapi.org/v2/top-headlines?country=ru&apiKey=c86169d8dfb14848a46619b9f6d4006a'
        response = r.get(url)
        data = response.json()
        for i in range(10):
            message += f"{dot} {data['articles'][i]['title']}\n{data['articles'][i]['url']}" + '\n' * 2
        bot.reply_to(msg, message)

    # PIGGIE

    if msg.text == '–•–†–Ø–ö üêñ':
        pigs = glob('imgs/*')
        pig = choice(pigs)
        f = open(pig, 'rb')
        bot.send_photo(msg.chat.id, f)
        f.close()

    if msg.text == '–ö–ê–ë–ê–ù ü¶ç':
        pigs = glob('cabany/*')
        pig = choice(pigs)
        f = open(pig, 'rb')
        bot.send_photo(msg.chat.id, f)
        f.close()

bot.infinity_polling()
